FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    WORKSPACE_DIR=/workspace

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    git \
    gnupg \
    jq \
    less \
    libffi-dev \
    libssl-dev \
    lsb-release \
    nano \
    openssh-client \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    software-properties-common \
    sudo \
    unzip \
    vim \
    wget \
    zip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Docker CLI
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel \
    && pip3 install --no-cache-dir \
    black \
    flake8 \
    ipython \
    jupyter \
    litellm \
    matplotlib \
    numpy \
    pandas \
    pytest \
    requests \
    scikit-learn \
    scipy \
    seaborn \
    tenacity \
    torch \
    tqdm \
    transformers \
    httpx \
    fastapi \
    uvicorn \
    python-socketio \
    websockets \
    beautifulsoup4 \
    markdown \
    pyyaml \
    python-dotenv

# Create a non-root user
RUN useradd -m -s /bin/bash -u 1000 backdoor \
    && echo "backdoor ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create workspace directory
RUN mkdir -p ${WORKSPACE_DIR} \
    && chown -R backdoor:backdoor ${WORKSPACE_DIR}

# Set up code-server
RUN curl -fsSL https://code-server.dev/install.sh | sh \
    && mkdir -p /home/backdoor/.config/code-server \
    && echo "bind-addr: 0.0.0.0:8080\nauth: none\ncert: false" > /home/backdoor/.config/code-server/config.yaml \
    && chown -R backdoor:backdoor /home/backdoor/.config

# Install code-server extensions
RUN code-server --install-extension ms-python.python \
    && code-server --install-extension ms-toolsai.jupyter \
    && code-server --install-extension ms-azuretools.vscode-docker \
    && code-server --install-extension dbaeumer.vscode-eslint \
    && code-server --install-extension esbenp.prettier-vscode \
    && code-server --install-extension github.copilot \
    && code-server --install-extension github.vscode-pull-request-github

# Copy entrypoint script
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER backdoor
WORKDIR ${WORKSPACE_DIR}

# Set up Git configuration
RUN git config --global user.name "backdoor" \
    && git config --global user.email "backdoor@example.com" \
    && git config --global --add safe.directory ${WORKSPACE_DIR}

# Expose ports
# - 8000: Execution server
# - 8080: Code-server
EXPOSE 8000 8080

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]