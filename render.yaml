services:
  - type: web
    name: backdoor-ai
    env: python
    plan: free
    buildCommand: |
      apt-get update && apt-get install -y curl wget git gnupg build-essential apt-transport-https ca-certificates lsb-release
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
      apt-get update && apt-get install -y docker-ce-cli
      curl -fsSL https://code-server.dev/install.sh | sh
      pip install -r requirements.txt
      python -m flask db upgrade
      mkdir -p app/backdoor/microagents
      if [ -d "OpenHands/microagents" ]; then
        cp -r OpenHands/microagents/* app/backdoor/microagents/
        find app/backdoor/microagents -type f -name "*.md" -exec sed -i 's/openhands/backdoor/g' {} \;
        find app/backdoor/microagents -type f -name "*.md" -exec sed -i 's/OpenHands/Backdoor/g' {} \;
      fi
    startCommand: gunicorn --bind 0.0.0.0:$PORT --workers 2 --threads 4 wsgi:app
    autoDeploy: true
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.11
      - key: SECRET_KEY
        generateValue: true
      - key: TOGETHER_API_KEY
        sync: false
      - key: TOGETHER_MODEL
        value: "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free"
      - key: TOGETHER_API_BASE
        value: "https://api.together.xyz/v1"
      - key: OPENAI_API_KEY
        sync: false
      - key: OPENAI_MODEL
        value: "gpt-3.5-turbo"
      - key: OPENAI_API_BASE
        value: "https://api.openai.com/v1"
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: ANTHROPIC_MODEL
        value: "claude-3-haiku-20240307"
      - key: ANTHROPIC_API_BASE
        value: "https://api.anthropic.com/v1"
      - key: GOOGLE_API_KEY
        sync: false
      - key: GOOGLE_MODEL
        value: "gemini-pro"
      - key: GOOGLE_API_BASE
        value: "https://generativelanguage.googleapis.com/v1beta"
      - key: MISTRAL_API_KEY
        sync: false
      - key: MISTRAL_MODEL
        value: "mistral-small"
      - key: MISTRAL_API_BASE
        value: "https://api.mistral.ai/v1"
      - key: COHERE_API_KEY
        sync: false
      - key: COHERE_MODEL
        value: "command"
      - key: COHERE_API_BASE
        value: "https://api.cohere.ai/v1"
      - key: CUSTOM_API_KEY
        sync: false
      - key: CUSTOM_MODEL
        sync: false
      - key: CUSTOM_API_BASE
        sync: false
      - key: LLM_PROVIDER
        value: "together"
      - key: GITHUB_TOKEN
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: backdoor-db
          property: connectionString
      - key: MCP_ENABLED
        value: "true"
      - key: MCP_LOG_LEVEL
        value: "INFO"
      - key: VSCODE_SERVER_PATH
        value: "/usr/bin/code-server"
      - key: BACKDOOR_ENV
        value: "production"
      - key: BACKDOOR_DOCKER_ENABLED
        value: "true"
      - key: BACKDOOR_DOCKER_IMAGE
        value: "backdoor/runtime:latest"
      - key: BACKDOOR_DOCKER_NETWORK
        value: "backdoor-network"
    healthCheckPath: /api/health

databases:
  - name: backdoor-db
    plan: free
    postgresMajorVersion: 14

preBootScript: |
  #!/bin/bash
  set -e
  echo "Creating necessary directories..."
  mkdir -p /tmp/backdoor/{tools,cache,logs,data,config,vscode/workspaces,vscode/sessions,microagents,runtime,plugins,extensions,templates,static,uploads,downloads,backups}
  if command -v docker &> /dev/null; then
    if ! docker network ls | grep -q backdoor-network; then
      echo "Creating Docker network: backdoor-network"
      docker network create backdoor-network || true
    fi
  fi
  echo "Backdoor initialized at $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > /tmp/backdoor/initialized
  echo "Pre-boot initialization complete!"